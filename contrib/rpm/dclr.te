policy_module(dclr, 1.100.1)

########################################
#
# Declarations
#

type dclr_t;
type dclr_exec_t;
init_daemon_domain(dclr_t, dclr_exec_t)

permissive dclr_t;

type dclr_initrc_exec_t;
init_script_file(dclr_initrc_exec_t)

type dclr_conf_t;
files_type(dclr_conf_t)

type dclr_var_lib_t;
files_type(dclr_var_lib_t)

type dclr_var_run_t;
files_type(dclr_var_run_t)

type dclr_port_t;
corenet_port(dclr_port_t)

########################################
#
# dclr local policy
#
allow dclr_t self:process { fork };

allow dclr_t self:fifo_file rw_fifo_file_perms;
allow dclr_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(dclr_t, dclr_conf_t, dclr_conf_t)
manage_files_pattern(dclr_t, dclr_conf_t, dclr_conf_t)

manage_dirs_pattern(dclr_t, dclr_var_lib_t, dclr_var_lib_t)
manage_files_pattern(dclr_t, dclr_var_lib_t, dclr_var_lib_t)
files_var_lib_filetrans(dclr_t, dclr_var_lib_t, { dir file })

manage_dirs_pattern(dclr_t, dclr_var_run_t, dclr_var_run_t)
manage_files_pattern(dclr_t, dclr_var_run_t, dclr_var_run_t)

sysnet_dns_name_resolve(dclr_t)
corenet_all_recvfrom_unlabeled(dclr_t)

allow dclr_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(dclr_t)
corenet_tcp_sendrecv_generic_node(dclr_t)
corenet_tcp_sendrecv_all_ports(dclr_t)
corenet_tcp_bind_generic_node(dclr_t)

gen_require(`
    type dclr_port_t;
')
allow dclr_t dclr_port_t:tcp_socket name_bind;

gen_require(`
    type dclr_port_t;
')
allow dclr_t dclr_port_t:tcp_socket name_connect;

domain_use_interactive_fds(dclr_t)

files_read_etc_files(dclr_t)

miscfiles_read_localization(dclr_t)

sysnet_dns_name_resolve(dclr_t)

allow dclr_t dclr_exec_t:file execute_no_trans;
allow dclr_t self:process setsched;
corecmd_exec_ls(dclr_t)
corenet_tcp_connect_http_port(dclr_t)
dev_read_urand(dclr_t)
fs_getattr_xattr_fs(dclr_t)
kernel_read_system_state(dclr_t)
